{"version":3,"sources":["../../src/server/database.js"],"names":["mongooseOptions","connectTimeoutMS","keepAlive","useNewUrlParser","useFindAndModify","useCreateIndex","useUnifiedTopology","prepareDB","server","process","env","MONGO_URI","start","mongoose","connect","err","console","error","stop","disconnect","then","log","catch"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;AAEA,IAAMA,kBAAkB;AACtBC,oBAAkB,KADI;AAEtBC,aAAW,IAFW;AAGtBC,mBAAiB,IAHK;AAItBC,oBAAkB,KAJI;AAKtBC,kBAAgB,IALM;AAMtBC,sBAAoB;AANE,CAAxB;;AASO,IAAMC;AAAA,sFAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,kBADiB,GACRC,QAAQC,GAAR,CAAYC,SADJ;;AAGjBC,iBAHiB,GAGT,SAARA,KAAQ,GAAM;AAClB;AACAC,iCAASC,OAAT,CAAiBN,MAAjB,EAAyBR,eAAzB,EAA0C,UAACe,GAAD,EAAS;AACjD,oBAAIA,GAAJ,EAASC,QAAQC,KAAR,CAAcF,GAAd;AACV,eAFD;AAGD,aARsB;;AAUjBG,gBAViB;AAAA,mGAUV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACLL,mBAASM,UAAT,EADK;;AAAA;AAAA,yDAEJX,OAAOU,IAAP,EAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVU;;AAAA,8BAUjBA,IAViB;AAAA;AAAA;AAAA;;AAAA,8CAehB;AACLN,0BADK;AAELM;AAFK,aAfgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAqBQ;AACbJ,SADa,qBACH;AACRD,uBACGC,OADH,MACcL,QAAQC,GAAR,CAAYC,SAD1B,EACuCX,eADvC,EAEGoB,IAFH,CAEQ;AAAA,aAAMJ,QAAQK,GAAR,CAAY,mBAAZ,CAAN;AAAA,KAFR,EAGGC,KAHH,CAGS,UAACP,GAAD;AAAA,aAASC,QAAQC,KAAR,CAAcF,GAAd,CAAT;AAAA,KAHT;AAID;AANY,C","file":"database.js","sourcesContent":["import 'dotenv/config.js';\r\n\r\nimport mongoose from 'mongoose';\r\n\r\nconst mongooseOptions = {\r\n  connectTimeoutMS: 30000, \r\n  keepAlive: true,\r\n  useNewUrlParser: true,\r\n  useFindAndModify: false,\r\n  useCreateIndex: true,\r\n  useUnifiedTopology: true,\r\n};\r\n\r\nexport const prepareDB = async () => {\r\n  const server = process.env.MONGO_URI\r\n\r\n  const start = () => {\r\n    // const mongoUri = server?.getUri();\r\n    mongoose.connect(server, mongooseOptions, (err) => {\r\n      if (err) console.error(err);\r\n    });\r\n  };\r\n\r\n  const stop = async () => {\r\n    await mongoose.disconnect();\r\n    return server.stop();\r\n  };\r\n\r\n  return {\r\n    start,\r\n    stop,\r\n  };\r\n};\r\n\r\nexport default {\r\n  connect() {\r\n    mongoose\r\n      .connect(`${process.env.MONGO_URI}`, mongooseOptions)\r\n      .then(() => console.log('MongoDB connected'))\r\n      .catch((err) => console.error(err));\r\n  },\r\n};\r\n"]}